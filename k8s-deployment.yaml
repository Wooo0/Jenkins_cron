apiVersion: apps/v1
kind: Deployment
metadata:
  name: cron-jenkins
  labels:
    app: cron-jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cron-jenkins
  template:
    metadata:
      labels:
        app: cron-jenkins
    spec:
      containers:
      - name: cron-jenkins
        image: cron-jenkins:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: DB_TYPE
          value: "sqlite"
        - name: DB_PATH
          value: "/data/cron_jenkins.db"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: cron-jenkins-secrets
              key: jwt-secret
        - name: ADMIN_USERNAME
          value: "admin"
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cron-jenkins-secrets
              key: admin-password
        - name: ADMIN_EMAIL
          value: "admin@example.com"
        volumeMounts:
        - name: data-storage
          mountPath: /usr/src/app
        - name: data-volume
          mountPath: /data
      volumes:
      - name: data-storage
        emptyDir: {}
      - name: data-volume
        persistentVolumeClaim:
          claimName: cron-jenkins-pvc
---
apiVersion: v1
kind: Secret
metadata:
  name: cron-jenkins-secrets
type: Opaque
data:
  # 使用 base64 编码的值
  # echo -n "your-secret-key-change-in-production" | base64
  jwt-secret: eW91ci1zZWNyZXQta2V5LWNoYW5nZS1pbi1wcm9kdWN0aW9u
  # echo -n "admin123" | base64
  admin-password: YWRtaW4xMjM=
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cron-jenkins-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: cron-jenkins-service
spec:
  selector:
    app: cron-jenkins
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: LoadBalancer